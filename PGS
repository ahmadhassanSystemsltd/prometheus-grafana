#!/bin/bash

echo "Updating Yum...."
sudo yum -y update

read -p "Choose Your Options Press 1 to setup prometheous Press 2 to setup Grafana Press 3 to setup both  0 to exit" option

if [ $option == 1 ]
then
  git clone https://github.com/prometheus-operator/kube-prometheus.git
  cd kube-prometheus
  echo "Creating monitoring namespace, CustomResourceDefinitions & operator pod"
  kubectl create -f manifests/setup
  kubectl get ns monitoring
  echo "Deploy Prometheus monitoring stack"
  kubectl create -f manifests/
elif [ $option == 2 ]
then
  echo "Accessing Grafana dashboard using NodePort" 
  git clone https://github.com/ahmadhassanSystemsltd/grafana-setup.git
  echo "Creating monitoring namespace, CustomResourceDefinitions & operator pod"
  kubectl create -f grafana-setup/Setup
  kubectl get ns monitoring
  echo "Deploy Prometheus monitoring stack"
  kubectl create -f grafana-setup/
  echo " Patching Nodeport service with Prometheous "
  kubectl --namespace monitoring patch svc grafana -p '{"spec": {"type": "NodePort"}}'
  kubectl -n monitoring get svc  | grep NodePort
elif [ $option == 3 ]
then
  echo "Accessing Prometheus UI and Grafana dashboard using NodePort" 
  git clone https://github.com/prometheus-operator/kube-prometheus.git
  cd kube-prometheus
  echo "Creating monitoring namespace, CustomResourceDefinitions & operator pod"
  kubectl create -f manifests/setup
  kubectl get ns monitoring
  echo "Deploy Prometheus monitoring stack"
  kubectl create -f manifests/
  echo " Patching Nodeport service with Prometheous "
  kubectl --namespace monitoring patch svc prometheus-k8s -p '{"spec": {"type": "NodePort"}}'
  echo " Patching Nodeport service with Grafana"
  kubectl --namespace monitoring patch svc grafana -p '{"spec": {"type": "NodePort"}}'
  kubectl -n monitoring get svc  | grep NodePort

  
 
else
    echo "exiting"
fi
